import os
import random
from Crypto.Cipher import AES
from Crypto.Hash import SHA256
from Crypto.Random import get_random_bytes

#define decrypt function
def decrypt(key,filename):
	chunksize = 64*1024
	outputFile = filename[11:]

	with open(filename, 'rb') as infile:
		filesize = long(infile,read(16))
		iv = infile.read(16)
#create decryptor
		decryptor = AES.new(key, AES.MODE_CBC, IV=iv)

		with open(outputfile, 'wb') as outfile:
			while True:
				chunk = infile.read(chunksize)
				

				if len(chunk) == 0:
					break
#put contents in a file
				outfile.write(decryptor.decrypt(chunk))
			outfile.truncate(filesize)


#define encrypt function

def encrypt(key, filename):
	chunksize = 64*1024
	outputFile = ("encrypted")+filename
	filesize = str(os.path("filename").zfill(16)
	iv = os.urandom(16)
	key = os.urandom(16)
	encryptor = AES.new(key, AES.MODE_CBC, IV=iv)
	
#generate random IV
	
#create encrypt object

#opens files
	with open(filename, 'rb') as infile:
		with open(outputFile, 'wb') as outfile:
			outfile.write(filesize)
			outfile.write(IV)
#store cipher text in outfile
			while True:
				chunk = infile.read(chunksize)
				
				if len(chunk) == 0:
					break
				elif len(chunk) % 16 != 0:
					chunk += ' ' * (16 - (len(chunk) % 16))
				
				outfile.write(encryptor.encrypt(chunk))


def getkey(password):
	hasher = SHA256.new(password)
	return hasher.digest()
#create UI to accept input

def Main():
	choice = input("would you like to (E)crypt or (D)crypt?:")
	
	if choice == "E":
		filename = input("file to encrypt: ")
		password = input("password: ")
		encrypt("password", filename)
		print("Done.")
	elif choice == "D":
		filename = input("file to decrypt: ")
		password = input("password: ")
		decrypt("password", filename)
		print("Done.")
	else:
		print("no option selected, closing......")
		
#if __name__ == '__main__':
Main()
